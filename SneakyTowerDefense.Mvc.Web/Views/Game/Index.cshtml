@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Game_Layout.cshtml";
}

<h2>Index</h2>

<canvas id="gameCanvas" width="960" height="400"></canvas>

@section Scripts {

<script type="text/javascript">
    var stage, session, player, map;

    function init()
    {

        stage = new createjs.Stage("gameCanvas");
        stage.autoClear = true;
        //stage.onMouseDown = handleMouseDown;
        //stage.onMouseUp = handleMouseUp;

        //createjs.Touch.enable(stage);

        player = { health: 20 };

        map = new game.Map.Map({ enemyStart: { row: 5, column: 0 }, enemyTarget: { row: 5, column: 20 } }, stage, 9, 21);

        session = new game.Session(player, map,
            [new game.Enemies.Wave([new game.Enemies.Bomber({ maxHealth: 10, speed: 5 })], 10, 30),
            new game.Enemies.Wave([new game.Enemies.Bomber({ maxHealth: 10, speed: 5 }),
                                    new game.Enemies.Bomber({ maxHealth: 10, speed: 5 }),
                                    new game.Enemies.Bomber({ maxHealth: 10, speed: 5 })], 10, 30),
            new game.Enemies.Wave([new game.Enemies.Bomber({ maxHealth: 10, speed: 5 }),
                                    new game.Enemies.Bomber({ maxHealth: 10, speed: 5 }),
                                    new game.Enemies.Bomber({ maxHealth: 10, speed: 5 }),
                                    new game.Enemies.Bomber({ maxHealth: 10, speed: 5 }),
                                    new game.Enemies.Bomber({ maxHealth: 10, speed: 5 })], 10, 30)]);

        // add a cannon tower
        session.addTower(new game.Tower(session, { name: "Cannon Tower", minLevel: 1, cost: 5 },
                                        new game.Weapons.Cannon(session, {},
                                            new game.Weapons.Ammo.CannonAmmo({ damage: 1, speed: 10 })),
                                        map.getTile(5, 10)));

        session.update();
        stage.update();

        createjs.Ticker.addListener(window);
    }

    function stop()
    {
        createjs.Ticker.removeListener(window);
    }

    function tick()
    {
        session.update();
        stage.update();
    }

//    function handleMouseDown()
//    {
//    }

//    function handleMouseUp()
//    {
//    }

    $(function () { init(); });


</script>

}

